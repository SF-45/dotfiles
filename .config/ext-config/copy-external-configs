#!/bin/bash
# Reset
NC='\033[0m'       # Text Reset

# Regular Colors
Black='\033[0;30m'        # Black
Red='\033[0;31m'          # Red
Green='\033[0;32m'        # Green
Yellow='\033[0;33m'       # Yellow
Blue='\033[0;34m'         # Blue
Purple='\033[0;35m'       # Purple
Cyan='\033[0;36m'         # Cyan
White='\033[0;37m'        # White

function copy {
	local label=$1
	if [ -n $1 ]
	then
		local labal=$1
	else
		local label="Type"
	fi
   case "$mode" in
      copy) #mkdir -p $old
            cp -f $new $old;;
      link) #mkdir -p $old
            ln -sf $new $old;;
		*) return 1;;
   esac
	
	if [ $? -eq 0 ]
	then
			#echo -e "[${Green}$label: ${Cyan}$mode${NC}] $new -> $old"
			echo -e "[${Cyan}$mode${NC}] $new -> $old"
			
	fi
}
function quest {
	select ans in "Yes" "No"; do
		case $ans in
			Yes) return 1;;
			No) return 0;;
		esac
	done




   read -p "y/n (default \"y\"): " ans
   if [[ $ans == "y" || -z $ans ]]
   then
      return 1
   else
      return 0
   fi
}

allYes=0
inputPath=""

while [ -n "$1" ]
do
   case "$1" in
      -y) allYes=1;;
      -o) param="$2"
         echo "Found the -o option, with parameter value $param"
         shift ;;
      *) inputPath=$1
         break;;
   esac
shift
done

if [ -f "$inputPath" ]
then
	IFS=$'\n'
	for var in $(cat $inputPath)
	do
		IFS=$'\n '
		tmp=($var)
		new=${tmp[0]}
		old=${tmp[1]}
		mode=${tmp[2]}

		if [[ -f "$new" && -f "$old" ]]
		then
			cmp -s $new $old
			if [ $? -eq "1" ]
			then
				if [ $allYes -eq 0 ]
				then
					echo -e "[${Yellow}Update: ${Cyan}$mode${NC}] $old"
					quest
					if [ $? -eq 1 ]
					then
					copy "Update"
					fi
				else
					copy "Update"
				fi
			else
				echo -e "[${Green}Ok${NC}] $old"
			fi
		elif [[ -f "$new" ]]
		then
			if [ $allYes -eq 0 ]
			then
				echo -e "[${Yellow}New: ${Cyan}$mode${NC}] $new -> $old"
				quest
				if [ "$?" -eq 1 ]
				then
					copy "New"
				fi
			else
				copy "New"
			fi
		fi
	done
else 
	echo "File not found"
fi
